{"ast":null,"code":"var _jsxFileName = \"/Users/algofusion/Desktop/Vivahly/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in from localStorage\n    const savedUser = localStorage.getItem('vivahly_user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    setLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      const mockUser = {\n        id: 1,\n        email,\n        name: 'Anita & Rohan',\n        weddingDate: '2024-12-15',\n        avatar: '👰‍♀️🤵‍♂️'\n      };\n      setUser(mockUser);\n      localStorage.setItem('vivahly_user', JSON.stringify(mockUser));\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async (email, password, name) => {\n    setLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      const mockUser = {\n        id: Date.now(),\n        email,\n        name,\n        weddingDate: null,\n        avatar: '👤'\n      };\n      setUser(mockUser);\n      localStorage.setItem('vivahly_user', JSON.stringify(mockUser));\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('vivahly_user');\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","login","email","password","Promise","resolve","setTimeout","mockUser","id","name","weddingDate","avatar","setItem","stringify","success","error","message","register","Date","now","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/algofusion/Desktop/Vivahly/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is logged in from localStorage\n    const savedUser = localStorage.getItem('vivahly_user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    setLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      const mockUser = {\n        id: 1,\n        email,\n        name: 'Anita & Rohan',\n        weddingDate: '2024-12-15',\n        avatar: '👰‍♀️🤵‍♂️',\n      };\n      \n      setUser(mockUser);\n      localStorage.setItem('vivahly_user', JSON.stringify(mockUser));\n      return { success: true };\n    } catch (error) {\n      return { success: false, error: error.message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (email, password, name) => {\n    setLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      const mockUser = {\n        id: Date.now(),\n        email,\n        name,\n        weddingDate: null,\n        avatar: '👤',\n      };\n      \n      setUser(mockUser);\n      localStorage.setItem('vivahly_user', JSON.stringify(mockUser));\n      return { success: true };\n    } catch (error) {\n      return { success: false, error: error.message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('vivahly_user');\n  };\n\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}